AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  DebateIt API

  SAM Template for DebateIt API

Parameters:
  EnvironmentParameter:
    Type: String
  DatabaseNameParameter:
    Type: String
    Default: debateitdb

Resources:
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security Group for the Database
      GroupName: !Sub "debateit-db-sg-${EnvironmentParameter}"
      SecurityGroupEgress: 
        - Description: Allow all outbound traffic
          IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - Description: Allow all access for now
          FromPort: 5432
          ToPort: 5432
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
      VpcId: vpc-0104ff4f06ad0c7af
  DebateItDBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "debateitdb-secret-${EnvironmentParameter}"
      Description: RDS database auto-generated user password
      GenerateSecretString:
        SecretStringTemplate: !Sub '{"username": "debateitdbowner"}'
        GenerateStringKey: "password"
        PasswordLength: 30
        ExcludeCharacters: '"@/\'
        ExcludePunctuation: true
  DebateItDB:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      DBName: !Ref DatabaseNameParameter
      DBInstanceIdentifier: !Sub "debateitdb-${EnvironmentParameter}"
      DBInstanceClass: "db.t3.micro"
      DBSubnetGroupName: public-subnet-group
      Engine: postgres
      MasterUsername: !Sub '{{resolve:secretsmanager:${DebateItDBSecret}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${DebateItDBSecret}::password}}'
      PubliclyAccessible: true
      SourceRegion: us-east-1
      VPCSecurityGroups: [!Ref DBSecurityGroup]
  DebateItDBSecretAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties: 
      SecretId: !Ref DebateItDBSecret
      TargetId: !Ref DebateItDB
      TargetType: AWS::RDS::DBInstance

